(()=>{"use strict";var e={56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},72:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},s=[],i=0;i<e.length;i++){var d=e[i],l=r.base?d[0]+r.base:d[0],c=o[l]||0,u="".concat(l," ").concat(c);o[l]=c+1;var h=n(u),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==h)t[h].references++,t[h].updater(p);else{var C=a(p,r);r.byIndex=i,t.splice(i,0,{identifier:u,updater:C,references:1})}s.push(u)}return s}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var s=0;s<o.length;s++){var i=n(o[s]);t[i].references--}for(var d=r(e,a),l=0;l<o.length;l++){var c=n(o[l]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}o=d}}},90:(e,t)=>{var n,r;Object.defineProperty(t,"__esModule",{value:!0}),t.WildDrawFourCard=t.WildCard=t.DrawTwoCard=t.ReverseCard=t.SkipCard=t.NumberCard=t.Card=t.CardType=t.CardColor=void 0,function(e){e.RED="red",e.BLUE="blue",e.GREEN="green",e.YELLOW="yellow",e.WILD="wild"}(n||(t.CardColor=n={})),function(e){e.NUMBER="number",e.SKIP="skip",e.REVERSE="reverse",e.DRAW_TWO="draw_two",e.WILD="wild",e.WILD_DRAW_FOUR="wild_draw_four"}(r||(t.CardType=r={}));class a{constructor(e,t,n){this.color=e,this.value=t,this.type=n}getColor(){return this.color}getValue(){return this.value}getType(){return this.type}toString(){return`${this.color} ${this.value}`}}t.Card=a,t.NumberCard=class extends a{constructor(e,t){super(e,t,r.NUMBER)}canPlayOn(e){return this.color===e.getColor()||this.value===e.getValue()||e.getColor()===n.WILD}playEffect(e){}},t.SkipCard=class extends a{constructor(e){super(e,"SKIP",r.SKIP)}canPlayOn(e){return this.color===e.getColor()||e.getType()===r.SKIP||e.getColor()===n.WILD}playEffect(e){e.skipNextPlayer()}},t.ReverseCard=class extends a{constructor(e){super(e,"REVERSE",r.REVERSE)}canPlayOn(e){return this.color===e.getColor()||e.getType()===r.REVERSE||e.getColor()===n.WILD}playEffect(e){e.reverseDirection()}},t.DrawTwoCard=class extends a{constructor(e){super(e,"DRAW TWO",r.DRAW_TWO)}canPlayOn(e){return this.color===e.getColor()||e.getType()===r.DRAW_TWO||e.getColor()===n.WILD}playEffect(e){e.nextPlayerDraws(2),e.skipNextPlayer()}};class o extends a{constructor(){super(n.WILD,"WILD",r.WILD),this.newColor=null}canPlayOn(e){return!0}setColor(e){e!==n.WILD&&(this.newColor=e)}getColor(){return this.newColor||n.WILD}playEffect(e){}}t.WildCard=o,t.WildDrawFourCard=class extends o{constructor(){super()}getType(){return r.WILD_DRAW_FOUR}getValue(){return"WILD DRAW FOUR"}playEffect(e){e.nextPlayerDraws(4),e.skipNextPlayer()}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},128:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.QuickUNORules=t.StandardUNORules=t.Direction=void 0;const r=n(90);var a;!function(e){e[e.CLOCKWISE=1]="CLOCKWISE",e[e.COUNTER_CLOCKWISE=-1]="COUNTER_CLOCKWISE"}(a||(t.Direction=a={})),t.StandardUNORules=class{initialCardCount(){return 7}canPlayCard(e,t,n){return e.canPlayOn(t)}handleCardPlay(e,t,n){if(e.playEffect(n),e instanceof r.WildCard){const n=t.chooseColor();e.setColor(n)}}getNextPlayerIndex(e,t,n){return(e+n+t)%t}checkWinCondition(e){for(const t of e)if(t.hasWon())return t;return null}calculateScore(e,t){let n=0;for(const r of t)r!==e&&(n+=r.calculateHandScore());return n}},t.QuickUNORules=class{initialCardCount(){return 5}canPlayCard(e,t,n){return e.canPlayOn(t)}handleCardPlay(e,t,n){if(e.playEffect(n),e instanceof r.WildCard){const n=t.chooseColor();e.setColor(n)}}getNextPlayerIndex(e,t,n){return(e+n+t)%t}checkWinCondition(e){for(const t of e)if(t.getCardCount()<=2)return t;return null}calculateScore(e,t){let n=0;for(const r of t)r!==e&&(n+=10*r.getCardCount());return n}}},175:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Game=t.GameEvent=void 0;const r=n(90),a=n(484),o=n(128);var s;!function(e){e.GAME_START="game_start",e.TURN_START="turn_start",e.CARD_PLAYED="card_played",e.CARD_DRAWN="card_drawn",e.UNO_CALLED="uno_called",e.DIRECTION_CHANGE="direction_change",e.PLAYER_SKIPPED="player_skipped",e.GAME_END="game_end"}(s||(t.GameEvent=s={})),t.Game=class{constructor(e=[],t=new o.StandardUNORules,n=new a.StandardUNODeckFactory){this.players=[],this.currentPlayerIndex=0,this.direction=o.Direction.CLOCKWISE,this.topCard=null,this.eventListeners=[],this.skipFlag=!1,this.winner=null,this.gameOver=!1,this.players=e,this.rules=t,this.deckFactory=n,this.deck=this.deckFactory.createDeck()}addEventListener(e){this.eventListeners.push(e)}removeEventListener(e){const t=this.eventListeners.indexOf(e);-1!==t&&this.eventListeners.splice(t,1)}emitEvent(e,t={}){for(const n of this.eventListeners)n(e,t)}start(){if(this.players.length<2)throw new Error("At least 2 players are required to start the game");this.deck=this.deckFactory.createDeck();const e=this.rules.initialCardCount();for(const t of this.players){const n=this.deck.drawMultiple(e);t.addCards(n)}let t=this.deck.draw();if(t instanceof r.WildCard){const e=[r.CardColor.RED,r.CardColor.BLUE,r.CardColor.GREEN,r.CardColor.YELLOW],n=e[Math.floor(Math.random()*e.length)];t.setColor(n)}this.topCard=t,this.currentPlayerIndex=0,this.emitEvent(s.GAME_START,{players:this.players,topCard:this.topCard}),this.startTurn()}startTurn(){if(this.gameOver)return;const e=this.getCurrentPlayer();this.emitEvent(s.TURN_START,{player:e,topCard:this.topCard})}playCard(e){if(this.gameOver)return!1;const t=this.getCurrentPlayer();if(!this.topCard||!this.rules.canPlayCard(e,this.topCard,t))return!1;const n=t.playCard(e);return!!n&&(this.rules.handleCardPlay(n,t,this),this.deck.discard(n),this.topCard=n,this.emitEvent(s.CARD_PLAYED,{player:t,card:n}),this.checkWinCondition()||(t.hasUno()&&this.emitEvent(s.UNO_CALLED,{player:t}),this.nextTurn()),!0)}drawCard(){if(this.gameOver)return null;const e=this.getCurrentPlayer(),t=this.deck.draw();return t?(e.addCard(t),this.emitEvent(s.CARD_DRAWN,{player:e,card:t}),t.canPlayOn(this.topCard)||this.nextTurn(),t):null}skipNextPlayer(){this.skipFlag=!0,this.emitEvent(s.PLAYER_SKIPPED,{player:this.getNextPlayer()})}reverseDirection(){this.direction=this.direction===o.Direction.CLOCKWISE?o.Direction.COUNTER_CLOCKWISE:o.Direction.CLOCKWISE,this.emitEvent(s.DIRECTION_CHANGE,{direction:this.direction})}nextPlayerDraws(e){const t=this.getNextPlayer(),n=this.deck.drawMultiple(e);t.addCards(n),this.emitEvent(s.CARD_DRAWN,{player:t,cards:n,count:e})}getCurrentPlayer(){return this.players[this.currentPlayerIndex]}getNextPlayer(){const e=this.rules.getNextPlayerIndex(this.currentPlayerIndex,this.players.length,this.direction);return this.players[e]}getTopCard(){return this.topCard}nextTurn(){let e=this.rules.getNextPlayerIndex(this.currentPlayerIndex,this.players.length,this.direction);this.skipFlag&&(e=this.rules.getNextPlayerIndex(e,this.players.length,this.direction),this.skipFlag=!1),this.currentPlayerIndex=e,this.startTurn()}checkWinCondition(){const e=this.rules.checkWinCondition(this.players);if(e){this.winner=e,this.gameOver=!0;const t=this.rules.calculateScore(e,this.players);return this.emitEvent(s.GAME_END,{winner:e,score:t}),!0}return!1}getGameState(){return{players:this.players,currentPlayerIndex:this.currentPlayerIndex,direction:this.direction,topCard:this.topCard,winner:this.winner,gameOver:this.gameOver}}addPlayer(e){if(this.gameOver)throw new Error("Cannot add player after game has ended");this.players.push(e)}reset(){this.deck=this.deckFactory.createDeck(),this.topCard=null,this.currentPlayerIndex=0,this.direction=o.Direction.CLOCKWISE,this.skipFlag=!1,this.winner=null,this.gameOver=!1;for(const e of this.players)e.getHand().length=0}}},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(s[d]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);r&&s[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),t.push(c))}},t}},365:(e,t,n)=>{n.d(t,{A:()=>i});var r=n(601),a=n.n(r),o=n(314),s=n.n(o)()(a());s.push([e.id,"/* Main layout */\nbody {\n    font-family: 'Arial', sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #f0f0f0;\n}\n\n.game-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n}\n\n.game-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n    padding: 10px;\n    background-color: #2c3e50;\n    color: white;\n    border-radius: 5px;\n}\n\n.game-controls {\n    display: flex;\n    gap: 10px;\n}\n\n.game-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #27ae60;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n/* Opponents section */\n.opponents-container {\n    display: flex;\n    justify-content: space-around;\n    margin-bottom: 20px;\n}\n\n.opponent {\n    text-align: center;\n}\n\n.opponent-name {\n    font-weight: bold;\n    margin-bottom: 5px;\n    color: white;\n}\n\n.opponent-cards {\n    display: flex;\n    justify-content: center;\n}\n\n/* Middle section with deck and discard pile */\n.middle-section {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    margin: 20px 0;\n}\n\n.deck-area {\n    display: flex;\n    gap: 50px;\n}\n\n.deck, .discard-pile {\n    width: 120px;\n    height: 180px;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    position: relative;\n}\n\n.deck {\n    background-color: #2980b9;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    font-weight: bold;\n    font-size: 24px;\n}\n\n.deck::after {\n    content: \"UNO\";\n    position: absolute;\n}\n\n.game-info {\n    background-color: rgba(255, 255, 255, 0.8);\n    padding: 15px;\n    border-radius: 5px;\n    min-width: 200px;\n}\n\n/* Player hand section */\n.player-hand-container {\n    margin-top: 20px;\n}\n\n.player-hand-container h2 {\n    color: white;\n    margin-bottom: 10px;\n}\n\n.player-hand {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    justify-content: center;\n    min-height: 180px;\n    padding: 10px;\n    background-color: rgba(255, 255, 255, 0.2);\n    border-radius: 5px;\n}\n\n.player-actions {\n    display: flex;\n    justify-content: center;\n    gap: 20px;\n    margin-top: 15px;\n}\n\n/* Card styles */\n.card {\n    width: 100px;\n    height: 150px;\n    border-radius: 10px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: white;\n    position: relative;\n    transition: transform 0.2s ease;\n    cursor: pointer;\n}\n\n.card:hover {\n    transform: translateY(-10px);\n}\n\n.card-red {\n    background-color: #e74c3c;\n}\n\n.card-blue {\n    background-color: #3498db;\n}\n\n.card-green {\n    background-color: #2ecc71;\n}\n\n.card-yellow {\n    background-color: #f1c40f;\n}\n\n.card-wild {\n    background: linear-gradient(45deg, #e74c3c, #3498db, #2ecc71, #f1c40f);\n}\n\n.card-value {\n    font-size: 36px;\n}\n\n/* Game log */\n.game-log {\n    margin-top: 20px;\n    background-color: white;\n    border-radius: 5px;\n    padding: 10px;\n    max-height: 200px;\n    overflow-y: auto;\n}\n\n.log-container {\n    font-family: monospace;\n    font-size: 14px;\n}\n\n.log-entry {\n    margin: 5px 0;\n    padding: 5px;\n    border-bottom: 1px solid #eee;\n}\n\n/* Buttons */\nbutton {\n    padding: 8px 16px;\n    border: none;\n    border-radius: 4px;\n    background-color: #3498db;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    transition: background-color 0.2s;\n}\n\nbutton:hover {\n    background-color: #2980b9;\n}\n\nbutton:disabled {\n    background-color: #95a5a6;\n    cursor: not-allowed;\n}\n\nselect {\n    padding: 8px;\n    border-radius: 4px;\n    border: none;\n}",""]);const i=s},484:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SmallUNODeckFactory=t.StandardUNODeckFactory=t.Deck=void 0;const r=n(90);class a{constructor(e=[]){this.cards=[],this.discardPile=[],this.topCard=null,this.cards=e}shuffle(){for(let e=this.cards.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[this.cards[e],this.cards[t]]=[this.cards[t],this.cards[e]]}}draw(){return 0===this.cards.length&&(this.reuseDiscardPile(),0===this.cards.length)?null:this.cards.pop()||null}drawMultiple(e){const t=[];for(let n=0;n<e;n++){const e=this.draw();if(!e)break;t.push(e)}return t}discard(e){this.topCard&&this.discardPile.push(this.topCard),this.topCard=e}getTopCard(){return this.topCard}getRemainingCardCount(){return this.cards.length}reuseDiscardPile(){if(0===this.discardPile.length)return;const e=this.topCard;this.cards=[...this.discardPile],this.discardPile=[],this.topCard=e,this.shuffle()}}t.Deck=a,t.StandardUNODeckFactory=class{createDeck(){const e=[],t=[r.CardColor.RED,r.CardColor.BLUE,r.CardColor.GREEN,r.CardColor.YELLOW];for(const n of t){e.push(new r.NumberCard(n,"0"));for(let t=1;t<=9;t++)e.push(new r.NumberCard(n,t.toString())),e.push(new r.NumberCard(n,t.toString()));for(let t=0;t<2;t++)e.push(new r.SkipCard(n)),e.push(new r.ReverseCard(n)),e.push(new r.DrawTwoCard(n))}for(let t=0;t<4;t++)e.push(new r.WildCard),e.push(new r.WildDrawFourCard);const n=new a(e);return n.shuffle(),n}},t.SmallUNODeckFactory=class{createDeck(){const e=[],t=[r.CardColor.RED,r.CardColor.BLUE,r.CardColor.GREEN,r.CardColor.YELLOW];for(const n of t){e.push(new r.NumberCard(n,"0"));for(let t=1;t<=5;t++)e.push(new r.NumberCard(n,t.toString()));e.push(new r.SkipCard(n)),e.push(new r.ReverseCard(n)),e.push(new r.DrawTwoCard(n))}for(let t=0;t<2;t++)e.push(new r.WildCard),e.push(new r.WildDrawFourCard);const n=new a(e);return n.shuffle(),n}}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},601:e=>{e.exports=function(e){return e[1]}},659:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},696:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Player=void 0;const r=n(90);t.Player=class{constructor(e){this.hand=[],this.name=e}getName(){return this.name}getHand(){return[...this.hand]}getCardCount(){return this.hand.length}addCard(e){this.hand.push(e)}addCards(e){this.hand.push(...e)}findPlayableCard(e){for(const t of this.hand)if(t.canPlayOn(e))return t;return null}playCard(e){const t=this.hand.findIndex((t=>t.getColor()===e.getColor()&&t.getValue()===e.getValue()&&t.getType()===e.getType()));return-1!==t?this.hand.splice(t,1)[0]:null}hasCard(e){return this.hand.some((t=>t.getColor()===e.getColor()&&t.getValue()===e.getValue()&&t.getType()===e.getType()))}hasPlayableCard(e){return this.hand.some((t=>t.canPlayOn(e)))}hasUno(){return 1===this.hand.length}hasWon(){return 0===this.hand.length}calculateHandScore(){return this.hand.reduce(((e,t)=>{switch(t.getType()){case"number":return e+parseInt(t.getValue(),10);case"skip":case"reverse":case"draw_two":return e+20;case"wild":case"wild_draw_four":return e+50;default:return e}}),0)}chooseColor(){const e=new Map;for(const t of this.hand){const n=t.getColor();n!==r.CardColor.WILD&&e.set(n,(e.get(n)||0)+1)}let t=r.CardColor.RED,n=0;for(const[r,a]of e.entries())a>n&&(n=a,t=r);return t}}},788:(e,t,n)=>{n.r(t),n.d(t,{default:()=>y});var r=n(72),a=n.n(r),o=n(825),s=n.n(o),i=n(659),d=n.n(i),l=n(56),c=n.n(l),u=n(540),h=n.n(u),p=n(113),C=n.n(p),m=n(365),g={};g.styleTagTransform=C(),g.setAttributes=c(),g.insert=d().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=h(),a()(m.A,g);const y=m.A&&m.A.locals?m.A.locals:void 0},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nc=void 0,(()=>{const e=n(175),t=n(696),r=n(128),a=n(484),o=n(90);n(788);class s{constructor(){this.game=null,this.opponents=[],this.selectedCard=null,this.selectedColor=null,this.humanPlayer=new t.Player("You"),this.setupEventListeners()}initGame(n){this.opponents=[new t.Player("Computer 1"),new t.Player("Computer 2"),new t.Player("Computer 3")],this.game="standard"===n?new e.Game([this.humanPlayer,...this.opponents],new r.StandardUNORules,new a.StandardUNODeckFactory):new e.Game([this.humanPlayer,...this.opponents],new r.QuickUNORules,new a.SmallUNODeckFactory),this.game.addEventListener(this.handleGameEvent.bind(this))}setupEventListeners(){const e=document.getElementById("start-game");e&&e.addEventListener("click",(()=>{const e=document.getElementById("game-type").value;this.startNewGame(e)}));const t=document.getElementById("draw-card");t&&t.addEventListener("click",(()=>{this.drawCard()}));const n=document.getElementById("call-uno");n&&n.addEventListener("click",(()=>{this.callUno()}))}startNewGame(e){this.clearUI(),this.initGame(e),this.game&&this.game.start();const t=document.getElementById("draw-card");t&&(t.disabled=!1)}handleGameEvent(t,n){switch(this.logEvent(t,n),t){case e.GameEvent.GAME_START:this.updateGameInfo(),this.renderOpponents(),this.renderPlayerHand(),this.renderTopCard(n.topCard);break;case e.GameEvent.TURN_START:this.updateGameInfo(),this.enablePlayerActions(n.player===this.humanPlayer);break;case e.GameEvent.CARD_PLAYED:this.renderTopCard(n.card),this.renderPlayerHand(),this.renderOpponents();break;case e.GameEvent.CARD_DRAWN:this.renderPlayerHand();break;case e.GameEvent.DIRECTION_CHANGE:this.updateGameInfo();break;case e.GameEvent.GAME_END:this.handleGameEnd(n.winner,n.score)}}updateGameInfo(){if(!this.game)return;const e=document.getElementById("current-player"),t=document.getElementById("game-direction"),n=document.getElementById("game-status");if(e){const t=this.game.getCurrentPlayer();e.textContent=`Current Player: ${t.getName()}`}if(t){const e=1===this.game.direction?"Clockwise":"Counter-Clockwise";t.textContent=`Direction: ${e}`}n&&(n.textContent="Game Status: In Progress")}renderOpponents(){const e=document.querySelector(".opponents-container");e&&this.game&&(e.innerHTML="",this.opponents.forEach((t=>{const n=document.createElement("div");n.className="opponent";const r=document.createElement("div");r.className="opponent-name",r.textContent=t.getName(),n.appendChild(r);const a=document.createElement("div");a.className="opponent-cards";const o=t.getCardCount();for(let e=0;e<o;e++){const t=document.createElement("div");t.className="card",t.style.backgroundColor="#2980b9",t.style.marginLeft=e>0?"-50px":"0",a.appendChild(t)}n.appendChild(a),e.appendChild(n)})))}renderPlayerHand(){const e=document.getElementById("player-hand");if(!e||!this.game)return;e.innerHTML="";const t=this.humanPlayer.getHand();t.forEach((t=>{const n=this.createCardElement(t);n.addEventListener("click",(()=>{this.handleCardClick(t)})),e.appendChild(n)}));const n=document.getElementById("call-uno");n&&(n.disabled=1!==t.length)}renderTopCard(e){const t=document.getElementById("discard-pile");if(!t||!e)return;t.innerHTML="";const n=this.createCardElement(e);t.appendChild(n)}createCardElement(e){const t=document.createElement("div");switch(t.className="card",e.getColor()){case o.CardColor.RED:t.classList.add("card-red");break;case o.CardColor.BLUE:t.classList.add("card-blue");break;case o.CardColor.GREEN:t.classList.add("card-green");break;case o.CardColor.YELLOW:t.classList.add("card-yellow");break;case o.CardColor.WILD:t.classList.add("card-wild")}const n=document.createElement("div");return n.className="card-value",n.textContent=e.getValue(),t.appendChild(n),t}handleCardClick(e){if(!this.game)return;const t=this.game.getTopCard();t&&(this.game.getCurrentPlayer()===this.humanPlayer?e.canPlayOn(t)?e instanceof o.WildCard?(this.selectedCard=e,this.showColorSelection()):this.playCard(e):this.logEvent("info",{message:"You can't play this card!"}):this.logEvent("info",{message:"It's not your turn!"}))}showColorSelection(){const e=document.createElement("div");e.className="color-selection-modal",e.style.position="fixed",e.style.top="0",e.style.left="0",e.style.width="100%",e.style.height="100%",e.style.backgroundColor="rgba(0, 0, 0, 0.7)",e.style.display="flex",e.style.justifyContent="center",e.style.alignItems="center",e.style.zIndex="1000";const t=document.createElement("div");t.style.backgroundColor="white",t.style.padding="20px",t.style.borderRadius="10px",t.style.textAlign="center";const n=document.createElement("h2");n.textContent="Select a color",t.appendChild(n);const r=[{name:"Red",value:o.CardColor.RED,bgColor:"#e74c3c"},{name:"Blue",value:o.CardColor.BLUE,bgColor:"#3498db"},{name:"Green",value:o.CardColor.GREEN,bgColor:"#2ecc71"},{name:"Yellow",value:o.CardColor.YELLOW,bgColor:"#f1c40f"}],a=document.createElement("div");a.style.display="flex",a.style.justifyContent="center",a.style.gap="10px",a.style.marginTop="20px",r.forEach((t=>{const n=document.createElement("button");n.style.width="50px",n.style.height="50px",n.style.backgroundColor=t.bgColor,n.style.border="none",n.style.borderRadius="5px",n.style.cursor="pointer",n.addEventListener("click",(()=>{this.selectedColor=t.value,document.body.removeChild(e),this.selectedCard&&this.selectedCard instanceof o.WildCard&&(this.selectedCard.setColor(this.selectedColor),this.playCard(this.selectedCard),this.selectedCard=null,this.selectedColor=null)})),a.appendChild(n)})),t.appendChild(a),e.appendChild(t),document.body.appendChild(e)}playCard(e){this.game&&(this.game.playCard(e)||this.logEvent("error",{message:"Failed to play the card!"}))}drawCard(){this.game&&(this.game.getCurrentPlayer()===this.humanPlayer?this.game.drawCard()||this.logEvent("error",{message:"Failed to draw a card!"}):this.logEvent("info",{message:"It's not your turn!"}))}callUno(){this.game&&(this.humanPlayer.hasUno()?this.logEvent("info",{message:"You called UNO!"}):this.logEvent("info",{message:"You don't have UNO!"}))}enablePlayerActions(e){const t=document.getElementById("draw-card");t&&(t.disabled=!e)}handleGameEnd(e,t){const n=document.getElementById("game-status");n&&(n.textContent=`Game Status: Ended - ${e.getName()} won with a score of ${t}`),this.enablePlayerActions(!1),alert(`Game Over! ${e.getName()} won with a score of ${t}`)}logEvent(t,n){const r=document.getElementById("log-container");if(!r)return;const a=document.createElement("div");a.className="log-entry";let o="";if("info"===t||"error"===t)o=n.message;else switch(t){case e.GameEvent.GAME_START:o=`Game started with ${n.players.length} players. Top card: ${n.topCard.toString()}`;break;case e.GameEvent.TURN_START:o=`${n.player.getName()}'s turn. Top card: ${n.topCard.toString()}`;break;case e.GameEvent.CARD_PLAYED:o=`${n.player.getName()} played ${n.card.toString()}`;break;case e.GameEvent.CARD_DRAWN:o=n.count?`${n.player.getName()} drew ${n.count} cards`:`${n.player.getName()} drew a card`;break;case e.GameEvent.UNO_CALLED:o=`${n.player.getName()} called UNO!`;break;case e.GameEvent.DIRECTION_CHANGE:o="Direction changed to "+(1===n.direction?"clockwise":"counter-clockwise");break;case e.GameEvent.PLAYER_SKIPPED:o=`${n.player.getName()} was skipped`;break;case e.GameEvent.GAME_END:o=`Game ended. ${n.winner.getName()} won with a score of ${n.score}`;break;default:o=`Unknown event: ${t}`}a.textContent=o,r.appendChild(a),r.scrollTop=r.scrollHeight}clearUI(){const e=document.querySelector(".opponents-container");e&&(e.innerHTML="");const t=document.getElementById("player-hand");t&&(t.innerHTML="");const n=document.getElementById("discard-pile");n&&(n.innerHTML="");const r=document.getElementById("log-container");r&&(r.innerHTML="");const a=document.getElementById("current-player"),o=document.getElementById("game-direction"),s=document.getElementById("game-status");a&&(a.textContent="Current Player: "),o&&(o.textContent="Direction: Clockwise"),s&&(s.textContent="Game Status: Not Started"),this.enablePlayerActions(!1)}}document.addEventListener("DOMContentLoaded",(()=>{new s}))})()})();